// <auto-generated />
using System;
using ApiPredutos.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiPredutos.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250524000728_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiPredutos.Data.Entities.Agenda", b =>
                {
                    b.Property<Guid>("IdAgenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IDAGENDA");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DATA");

                    b.Property<Guid?>("IdCliente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomePet")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOMEPET");

                    b.Property<string>("Obs")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("OBS");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TIME");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TIPO");

                    b.HasKey("IdAgenda");

                    b.HasIndex("IdCliente");

                    b.ToTable("AGENDA", (string)null);
                });

            modelBuilder.Entity("ApiPredutos.Data.Entities.Clientes", b =>
                {
                    b.Property<Guid>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IDCLIENTE");

                    b.Property<string>("AnoNascimentoPet")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ANONASCIMENTOPET");

                    b.Property<string>("NomePet")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NOMEPET");

                    b.Property<string>("NumeroTutor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("NUMEROTUTOR");

                    b.Property<string>("Raca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("RACA");

                    b.Property<string>("Tutor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("TUTOR");

                    b.HasKey("IdCliente");

                    b.ToTable("CLIENTES", (string)null);
                });

            modelBuilder.Entity("ApiPredutos.Data.Entities.Agenda", b =>
                {
                    b.HasOne("ApiPredutos.Data.Entities.Clientes", "Cliente")
                        .WithMany("Agenda")
                        .HasForeignKey("IdCliente");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ApiPredutos.Data.Entities.Clientes", b =>
                {
                    b.Navigation("Agenda");
                });
#pragma warning restore 612, 618
        }
    }
}
